
---
apiVersion: v1
kind: Namespace
metadata:
   name: vote
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name:  worker
  namespace: vote
spec:
  replicas: 1
  selector:
    matchLabels:
      app: worker
  template:
    metadata:
      labels:
        app: worker
    spec:
      containers:
      - name: worker
        image: kodekloud/examplevotingapp_worker
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name:  db-deployment
  namespace: vote
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:9.4
        env:
          - name: POSTGRES_PASSWORD
            value: password
          - name: POSTGRES_HOST_AUTH_METHOD
            value: trust
        ports:
            - containerPort: 5432
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: db-data
      volumes:
      - name: db-data
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: db
  namespace: vote
spec:
  type: ClusterIP
  selector:
    app: postgres
  ports:
    - protocol: TCP
      targetPort: 5432
      port: 5432
---
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name:  result-deployment
  namespace: vote
spec:
  replicas: 1
  selector:
    matchLabels:
      app: result
  template:
    metadata:
      labels:
        app: result
    spec:
      containers:
      - name: result
        image: kodekloud/examplevotingapp_result:before
        # 发现环境中的deployment 不加container port 也是可以运行的
        ports:
          - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: result-service
  namespace: vote
spec:
  type: NodePort
  selector:
    app: result
  ports:
    - protocol: TCP
      targetPort: 80
      port: 5001
      nodePort: 31001
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name:  redis-deployment
  namespace: vote
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:alpine
        ports:
            - containerPort: 6379
        volumeMounts:
        - mountPath: /data
          name: redis-data
      volumes:
      - name: redis-data
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: vote
spec:
  type: ClusterIP
  selector:
    app: redis
  ports:
    - protocol: TCP
      targetPort: 6379
      port: 6379
---
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name:  vote-deployment
  namespace: vote
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vote
  template:
    metadata:
      labels:
        app: vote
    spec:
      containers:
      - name: vote
        image: kodekloud/examplevotingapp_vote:before
        ports:
          - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: vote-service
  namespace: vote
spec:
  type: NodePort
  selector:
    app: vote
  ports:
    - protocol: TCP
      targetPort: 80
      port: 5000
      nodePort: 31000
---

---
